from rsf.proj import *
from rsf.recipes.beg import server
from rsf.prog import RSFROOT

def Grey(data,other):
	Result(data,
       '''
       byte gainpanel=all clip=0.01 |
       grey3 title=Stack flat=n
       frame1=180 frame2=100 frame3=60  flat=n point1=.6 point2=.7 %s
       '''%other)

def Greyn(data,other):
	Result(data,
       '''
       byte gainpanel=all clip=0.001 |
       grey3 title=Stack flat=n
       frame1=180 frame2=100 frame3=60  flat=n point1=.6 point2=.7 %s
       '''%other)

def Greyk(data,other):
	Result(data,
       '''
       window f1=50 n1=330 f2=15 n2=170 f3=15 n3=98| put o1=1.579 |byte gainpanel=all clip=0.01 | grey3 frame1=180 frame2=100 frame3=60 flat=n  point1=.6 point2=.7 label1=Time unit1=s label2=Inline unit2=m label3=Crossline unit3=m  title=Stack flat=n
       frame1=180 frame2=100 frame3=60  flat=n point1=.6 point2=.7 %s
       '''%other)
def Greykimg(data,other):
	Result(data,
       '''
       window f1=50 n1=330 f2=15 n2=170 f3=15 n3=98 | put o1=3000|
       byte clip=.1 | grey3 label1=Depth unit1=m label2=Inline label3=Crossline unit2=m unit3=m title="" frame1=180 frame2=100 frame3=60  flat=n point1=.6 point2=.7 %s
       '''%other)
def Greynk(data,other):
	Result(data,
       '''
       window f1=50 n1=330 f2=15 n2=170 f3=15 n3=98| put o1=1.579 |byte gainpanel=all clip=0.001 | grey3 frame1=180 frame2=100 frame3=60 flat=n  point1=.6 point2=.7 label1=Time unit1=s label2=Inline unit2=m label3=Crossline unit3=m  title=Stack flat=n
       frame1=180 frame2=100 frame3=60  flat=n point1=.6 point2=.7 %s
       '''%other)
       
# Get velocity model

plot3 = ' window f1=50 f2=15 n2=170 f3=15 n3=98| put o1=3000 |byte gainpanel=a  | grey3 frame1=100 frame2=85 flat=n frame3=49 point1=.7 point2=.8 label1=Depth unit1=m label2=Inline unit2=m label3=Crossline unit3=m  '
plot3t = 'window f1=50 n1=330 f2=15 n2=170 f3=15 n3=98| put o1=1.579 |byte gainpanel=a mean=y | grey3 frame1=100 frame2=85 flat=n frame3=49 point1=.7 point2=.8 label1=Time unit1=s label2=Inline unit2=m label3=Crossline unit3=m  '
plot3a = 'window f1=50 n1=330 f2=15 n2=170 f3=15 n3=98 | put o1=3000|byte gainpanel=a mean=y | grey3 frame1=100 frame2=85 flat=n frame3=49 point1=.7 point2=.8 label1=Depth unit1=m bartype=h  '
plotI = ' window f1=50 | put o1=3000 | window min1=3025 max1=3078 f2=15 n2=170 n3=1 min3=150| grey label1=Depth unit1=m label2=Inline unit2=m pclip=99.5  '
plotX = ' window f1=50 | put o1=3000 | window min1=3030 max1=3075 n2=1 min2=250 f3=15 n3=98| grey label1=Depth unit1=m label2=Crossline unit2=m pclip=99.5  '
fetchlst = ['vp','den']
for thingy in fetchlst:
     Fetch('khuff-%s.HH'%thingy,'xavier',server)
#      Flow('%s0'%thingy,os.getenv('HOME')+'/DATA_diffr/khuff-%s.HH'%thingy,
     Flow('%s0'%thingy,'khuff-%s.HH'%thingy,
          '''
          dd form=native | 
          transp plane=23 |
          put o1=0 o2=0 o3=0 d1=0.333232 
          label1=Depth label2=Inline label3=Crossline
          unit1=m unit2=m unit3=m 
          ''')
     # pad the top a bit
     Flow(thingy,thingy+'0',
           '''
           window n1=1 | 
           spray axis=1 d=0.333232 n=50 |
           cat axis=1 ${SOURCE}|
           put o1=0
           ''')
     Flow(thingy+'bar',thingy,'bar gainpanel=a mean=y')
Result('kvp',['vp','vpbar'],
          plot3a+
          '''
          title=  bar=${SOURCES[1]} color=j scalebar=y barunit="m/s" barlabel="Khuff Velocity"
          ''')
Result('kden',['den','denbar'],
          plot3a+
          '''
          title= bar=${SOURCES[1]} color=j scalebar=y barunit="g/cm\^3\_" barlabel="Khuff Density"
          ''')
# acoustic impedace
Flow('ai','vp den','add mode=p ${SOURCES[1]}')
Flow('aibar','ai','bar gainpanel=a mean=y')
Result('kai',['ai','aibar'],
          '''
          scale dscale=1000|
          '''
          +plot3a+
          '''
          title= bar=${SOURCES[1]} color=j scalebar=y barunit="kg / s m\^2\_" barlabel="Khuff Acoustic Impedance"
          ''')
# reflectivity
Flow('refl','ai','ai2refl')

# modeling parameters
nz = 380
dz = 0.333232

dt = 0.00005
nt = 1501

freq = 100
nf = 201
f0 = 0
df = (freq*2-f0)*8
dw = df*2/nf
# convolution with wavelet
Flow('model','refl vp',
    '''
    depth2time velocity=${SOURCES[1]}
    dt=%g nt=%i|
    ricker1 frequency=%g |
    time2depth velocity=${SOURCES[1]}
    dz=%g nz=%i |
    costaper nw2=15costaper nw3=15
    '''%(dt,nt,freq,dz,nz))
Result('model',plot3+' title="Convolution Model" ')
# slowness
Flow('slo','vp','math output="1/input" | transp | transp plane=23' )


# modeling in reservoir
Flow('wzo','model slo',
    '''
    transp | transp plane=23|
    zomig3  mode=m inv=y
    --readwrite=y verb=y nrmax=30
     slo=${SOURCES[1]}
    nw=%i dw=%g ow=%g
    '''%(nf,dw,f0))

Flow('zo','wzo',
    '''
    transp plane=23 | transp|
    fft1 inv=y
    ''')
Result('zo',plot3+' title="Reservoir Response" label1=Time')

# overburden slowness
# we want a 3 km thick overburden
Flow('ovr-slo','slo','noise range=200 rep=y| add add=3800 | math output="1/input" |put d1=15 ') 
# upward continuation in overburden
Flow('wzo-ovr','wzo ovr-slo',
    '''
    zomig3  mode=d inv=y
    --readwrite=y verb=y nrmax=30
     slo=${SOURCES[1]}
    nw=%i dw=%g ow=%g
    '''%(nf,dw,f0))
Flow('zo-ovr','wzo-ovr',
    '''
    transp plane=23 | transp|
    fft1 inv=y
    ''')
Result('zo-ovr',
    plot3t+
    '''
     title="Modeled Data"
    ''')

Flow('k','zo-ovr','window n1=400')
# Grey('k','')
########################################################################
# INITIALIZATION
########################################################################
matlab         = WhereIs('matlab')
matROOT = '../matfun/'
matfun = 'LDRR'
matlabpath = os.environ.get('MATLABPATH',os.path.join(RSFROOT,'lib'))

if not matlab:
    sys.stderr.write('\nCannot find Matlab.\n')
    sys.exit(1)

# n1=251
# n2=688
# n3=418
n1=400
n2=200
n3=128
d1=0.000162602
d2=2.98492
d3=2.97638
o1=0
o2=0
o3=0
lf=60
hf=3000
verb=1

n1win=50
n2win=50
n3win=64
r1=0.5
r2=0.5
r3=0.5

put='n1=%d n2=%d n3=%d d1=%g d2=%g d3=%g o1=%g o2=%g o3=%g'%(n1,n2,n3,d1,d2,d3,o1,o2,o3)

N=10
N2=40
NN=3
ifdamp=0
############################################################
## with parameter
############################################################
Flow('k-lrr0 k-lrra0',[os.path.join(matROOT,matfun+'.m'),'k'],
     '''MATLABPATH=%(matlabpath)s %(matlab)s 
     -nosplash -nojvm -r "addpath %(matROOT)s;%(matfun)s('${SOURCES[1]}','${TARGETS[0]}','${TARGETS[1]}',%(n1)d,%(n2)d,%(n3)d,%(d1)g,%(lf)g,%(hf)g,%(N)d,%(N2)d,%(NN)d,%(n1win)d,%(n2win)d,%(n3win)d,%(r1)g,%(r2)g,%(r3)g,%(ifdamp)d,%(verb)d);quit"
     '''%vars(),stdin=0,stdout=-1)

Flow('k-lrr','k-lrr0','put %s'%put)
Flow('k-lrra','k-lrra0','put %s'%put)
Flow('k-lrr-n','k k-lrr','add scale=1,-1 ${SOURCES[1]}')
Flow('k-lrra-n','k k-lrra','add scale=1,-1 ${SOURCES[1]}')
Flow('k-pwd','reflections','window n1=400')
Flow('k-pwd-n','k k-pwd','add scale=1,-1 ${SOURCES[1]}')

Greyk('k','title="3D synthetic data"')
Greyk('k-lrr','title="LRR"')
Greyk('k-lrra','title="LRRA"')
Greyk('k-pwd','title="PWD"')
Greynk('k-lrr-n','title=LRR')
Greynk('k-lrra-n','title=LRRA')
Greynk('k-pwd-n','title=PWD')

# calculate data slope
# Smoothing Parameters
nx = 50 
nt = 410
rect1 = nt/10
rect2 = 200/10
rect3 = 128/10
# Plane Wave Destruction Parameters
order1 = 4
# Plane Wave Destruction Slope Estimation
Flow('slope','zo-ovr',
     '''
     dip rect1=%i rect2=%i rect3=%i order=%i verb=y
     '''%(rect1,rect2,rect3,order1))
slp = ['Inline','Crossline']

for k in range(2):
  slope = 'slope%i'%k
  Flow(slope,'slope','window n4=1 f4=%i'%k)
  Flow(slope+'bar',slope,'bar gainpanel=a')
  Plot(slope,[slope,slope+'bar'],
     plot3t+
     '''  
     title="%s Slope" flat=n color=j bar=${SOURCES[1]}
     barlabel=Slope scalebar=y
     '''%(slp[k]))
Result('slope','slope0 slope1','SideBySideIso')
# Enhance Reflections
    #spray radii
ns2=3
ns3=3
Flow('reflections','zo-ovr slope',
     '''
     pwspray2 ns2=%d ns3=%d dip=${SOURCES[1]} order=%i verb=y eps=0.1|
     stack axis=2
     '''% (ns2,ns3,order1))
Result('reflections',
    plot3t+
    '''
     title="Enhanced Reflections" flat=n pclip=99.9
    ''')
# Difference is diffractions
Flow('diffractions','zo-ovr reflections','add scale=1,-1 ${SOURCES[1]}')
Result('k-diffractions','diffractions',
    plot3t+
    '''
     title="Separated Diffractions" flat=n pclip=99.9
    ''')
# smooth slowness migration
# smooth out slowness
for slo in ('slo','ovr-slo'):
    Flow(slo+'-s',slo,'smooth rect1=%i rect2=%i rect3=%i'%(nz/10,rect2,rect3))

    
for item in ('k-lrr-n','k-lrra-n','k-pwd-n'):

  Flow(item+'w',item,
    '''
    fft1 | window n1=%i| transp | transp plane=23
    '''%nf)
# downward continuation in overburden
  Flow(item+'under',[item+'w','ovr-slo-s'],
    '''
    zomig3  mode=d inv=n
    --readwrite=y verb=y nrmax=30
     slo=${SOURCES[1]}
    ''')
# migration of reservoir
  Flow(item+'-mig',[item+'under','slo-s'],
    '''
    zomig3  mode=m inv=n
    --readwrite=y verb=y nrmax=30
     slo=${SOURCES[1]}|
    transp plane=23 |
    transp
    ''')
Result('k-pwd-n-mig',
   plot3+ 
   '''
   title="PWD Image" flat=n pclip=99.9
   ''')
Result('k-lrra-n-mig',
   plot3+ 
   '''
   title="LRRA Image" flat=n pclip=99.9
   ''')
Result('k-lrr-n-mig',
   plot3+ 
   '''
   title="LRR Image" flat=n pclip=99.9
   ''')     
   

Flow('k-pwd-imag','k-pwd-n-mig','cp')
Flow('k-lrr-imag','k-lrr-n-mig','cp')
Flow('k-lrra-imag','k-lrra-n-mig','cp')

Greykimg('k-pwd-imag','title="PWD"')
Greykimg('k-lrr-imag','title="LRR"')
Greykimg('k-lrra-imag','title="LRRA"') 

#add label
Plot('lk1',None,
	'''
	box x0=9 y0=6.5 label="Reflection" xt=-1 yt=0.5 length=1.5 
	''')
Plot('lk2',None,
	'''
	box x0=9.5 y0=7.5 label="Reflection" xt=-1 yt=0.5 length=1.5 
	''')
Plot('lk3',None,
	'''
	box x0=10.2 y0=7.2 label="" xt=-1 yt=0.5 length=0.5 
	''')
Plot('lk11',None,
	'''
	box x0=9 y0=6.5 label="" xt=-1 yt=0.5 length=0.5 
	''')
Plot('lk22',None,
	'''
	box x0=9.5 y0=7.5 label="" xt=-1 yt=0.5 length=0.5 
	''')
Plot('lk33',None,
	'''
	box x0=10.2 y0=7.2 label="" xt=-1 yt=0.5 length=0.5 
	''')
Plot('lk4',None,
	'''
	box x0=6.2 y0=7.5 label="" xt=1 yt=-0.5 length=0.5 
	''')
Plot('lk5',None,
	'''
	box x0=5.5 y0=7.0 label="Reflection" xt=1 yt=-0.5 length=1.5 
	''')
Plot('lk6',None,
	'''
	box x0=4.4 y0=6.5 label="" xt=1 yt=-0.5 length=0.5 
	''')
Plot('lk44',None,
	'''
	box x0=6.2 y0=7.5 label="" xt=1 yt=-0.5 length=0.5 
	''')
Plot('lk55',None,
	'''
	box x0=5.5 y0=7.0 label="" xt=1 yt=-0.5 length=0.5 
	''')
Plot('lk66',None,
	'''
	box x0=4.4 y0=6.5 label="" xt=1 yt=-0.5 length=0.5 
	''')
Result('k-pwd-n-0','Fig/k-pwd-n.vpl lk1 lk2 lk3','Overlay')  
Result('k-lrr-n-0','Fig/k-lrr-n.vpl lk11 lk22 lk33','Overlay')  
Result('k-lrra-n-0','Fig/k-lrra-n.vpl lk11 lk22 lk33','Overlay')  

Result('k-pwd-imag-0','Fig/k-pwd-imag.vpl lk4 lk5 lk6','Overlay')
Result('k-lrr-imag-0','Fig/k-lrr-imag.vpl lk44 lk55 lk66','Overlay')
Result('k-lrra-imag-0','Fig/k-lrra-imag.vpl lk44 lk55 lk66','Overlay')



End()
