from rsf.proj import *

def Greyr(data,other):
	Result(data,
           '''
           byte allpos=y bar=bar.rsf clip=20 |
           grey3 flat=n frame1=200 frame2=50 frame3=36
           color=j wanttitle=n
           label1=Time unit1=s
           label2="Relative Stretch"
           label3="X distance" unit3=km scalebar=y %s
           '''%other)
           
for i in range(6):
    m = 'm%d' % i
    j = 'j%d' % i

    # Get a migrated image for month i
    hh = m + '_stack.HH'
    Fetch(hh,'dury')

    # Filter: Bandpass and AGC 
    Flow(m,hh,
         '''
         dd form=native |
         bandpass flo=20 fhi=250 |
         agc window=100 |
         window max1=0.3 |
         put label1=Time unit1=s
         ''')
    Flow(j,m,'window j2=2 j3=2')

    # Select 2-D slice
    slice = 'slice%i' % i
    Flow(slice,m,'window f3=35 n3=1')
    Plot(slice,'grey color=g wanttitle=n wheretitle=t wherexlabel=b wantaxis=n parallel2=n font=2 format2="%3.2f" labelsz=11')

    Flow('clip.par','slice0','byte | get clip')

    # take difference with base
    if i > 0:
        diff = 'diff%i' % i
        Flow(diff,[slice,'slice0'],'add scale=1,-1 ${SOURCES[1]}')
        Plot(diff,[diff,'clip.par'],
             'grey par=${SOURCES[1]} wanttitle=n wheretitle=t wherexlabel=b wantaxis=n parallel2=n font=2 format2="%3.2f" labelsz=11')        

Plot('s0',None,'box font=2 x0=2.350000 y0=9.5 label="No steam" xt=0.000000 yt=0.000000')
Plot('s1',None,'box font=2 x0=7.000000 y0=9.5 label="2-months steam" xt=0.000000 yt=0.000000')
Plot('s2',None,'box font=2 x0=11.538333 y0=9.5 label="5-months steam" xt=0.000000 yt=0.000000')
Plot('s3',None,'box font=2 x0=2.350000 y0=9.5 label="9-months steam" xt=0.000000 yt=0.000000')
Plot('s4',None,'box font=2 x0=7.000000 y0=9.5 label="13-months steam" xt=0.000000 yt=0.000000')
Plot('s5',None,'box font=2 x0=11.538333 y0=9.5 label="19-months steam" xt=0.000000 yt=0.000000')


Plot('ss0',None,'box font=1 x0=1.250000 y0=9.5 label="No steam" xt=0.000000 yt=0.000000')
Plot('ss1',None,'box font=1 x0=3.500000 y0=9.5 label="2 (mon)" xt=0.000000 yt=0.000000')
Plot('ss2',None,'box font=1 x0=5.738333 y0=9.5 label="5 (mon)" xt=0.000000 yt=0.000000')
Plot('ss3',None,'box font=1 x0=8.00000 y0=9.5 label="9 (mon)" xt=0.000000 yt=0.000000')
Plot('ss4',None,'box font=1 x0=10.300000 y0=9.5 label="13 (mon)" xt=0.000000 yt=0.000000')
Plot('ss5',None,'box font=1 x0=12.538333 y0=9.5 label="19 (mon)" xt=0.000000 yt=0.000000')

Plot('stka','slice0 slice1 slice2','SideBySideAniso')
Result('stka','stka s0 s1 s2','Overlay')

Plot('stkb','slice3 slice4 slice5','SideBySideAniso')
Result('stkb','stkb s3 s4 s5','Overlay')

Plot('difa','slice0 diff1 diff2','SideBySideAniso')
Result('difa','difa s0 s1 s2','Overlay')

Plot('difb','diff3 diff4 diff5','SideBySideAniso')
Result('difb','difb s3 s4 s5','Overlay')

Plot('difc','slice0 diff1 diff5','SideBySideAniso')
Result('difc','difc s0 s1 s5','Overlay')

g0=0.9  # starting change 
g1=2-g0  # last change
ng=101   # number of changes to scan
dg = (g1-g0)/(ng-1)

# reference
rt_max=20
rt_min=5
rg_max=10
rg_min=2
rx_max=10
rx_min=2

rt_max=20
rt_min=5
rg_max=10
rg_min=2
rx_max=10
rx_min=5

t_preserve=0.16 #below this time, stationary smoothing (not used)

for i in range(1,6):
    slice = 'slice%d' % i

    # Warping scan
    ##############
    scan = 'scan%d' % i
    scann = 'scann%d' % i
    rect1='rect1-%d' %i
    rect2='rect2-%d' %i
    rect3='rect3-%d' %i
    Flow(scan,[slice,'slice0'],
         '''
         warpscan other=${SOURCES[1]} niter=100
         ng=%d g0=%g dg=%g rect1=%g rect2=%g rect3=%g rect4=1
         ''' % (ng,g0,dg,rt_max,rg_min,rx_max))
    Result(scan,
           '''
           byte allpos=y bar=bar.rsf |
           grey3 flat=n frame1=200 frame2=50 frame3=36
           color=j wanttitle=n
           label1=Time unit1=s
           label2="Relative Stretch" barlabel=Energy barunit=
           label3="X distance" unit3=km scalebar=y
           maxval=0.8 minval=0.0
           ''')  

    # Pick the stretch
    pick = 'pick%d' % i
    Flow(pick,scan,'pick rect1=20 rect2=10 vel0=1 | window')
    Result(pick,
           '''
           grey color=j scalebar=y wanttitle=n
           label1=Time unit1=s label2="X distance" unit2=km barlabel="Relative stretch"  bias=1 clip=0.006 minval=0.997 maxval=1.007
           ''')

    # Convert stretch to shift
    shift = 'shift%d' % i
    Flow(shift,pick,'math output="(input-1)*x1" ')
        
    # Apply the stretch
    warp = 'warp%d' % i
    Flow(warp,[slice,'slice0',shift],
         '''
         warp1 other=${SOURCES[1]} warpin=${SOURCES[2]}
         verb=1 nliter=0 
         ''')
    diff = 'dif%d' % i    
    Flow(diff,[warp,'slice0'],'add scale=1,-1 ${SOURCES[1]}')

    # display
    Plot(warp,'grey color=g wanttitle=n wheretitle=t wherexlabel=b wantaxis=n wantaxis1=y')
    Plot(diff,[diff,'clip.par'],
         'grey color=g par=${SOURCES[1]} wanttitle=n wheretitle=t wherexlabel=b wantaxis=n parallel2=n font=2 format2="%3.2f" labelsz=11')  

Plot('stka2','slice0 warp1 warp2','SideBySideAniso')
Result('stka2','stka2 s0 s1 s2','Overlay')

Plot('stkb2','warp3 warp4 warp5','SideBySideAniso')
Result('stkb2','stkb2 s3 s4 s5','Overlay')

Plot('difa2','slice0 dif1 dif2','SideBySideAniso')
Result('difa2','difa2 s0 s1 s2','Overlay')

Plot('difb2','dif3 dif4 dif5','SideBySideAniso')
Result('difb2','difb2 s3 s4 s5','Overlay')

Plot('difc2','slice0 dif1 dif5','SideBySideAniso')
Result('difc2','difc2 s0 s1 s5','Overlay')

Plot('label1',None,
	'''
	box x0=9.7 y0=2.9 label="Mismatch" xt=-1 yt=0.5 length=2.0 size=1
	''')
Plot('label11',None,
	'''
	box x0=9.7 y0=2.9 label="Match" xt=-1 yt=0.5 length=2.0 size=1
	''')
Plot('label2',None,
	'''
	box x0=3.7 y0=2.2 label="" xt=-0.1 yt=0.5 length=0.6 size=1
	''')
Plot('label3',None,
	'''
	box x0=4.7 y0=2.2 label="" xt=-0.1 yt=0.5 length=0.6 size=1
	''')
Plot('label4',None,
	'''
	box x0=7.7 y0=2.5 label="" xt=-0.1 yt=0.5 length=0.6 size=1
	''')
Plot('label5',None,
	'''
	box x0=9.7 y0=2.5 label="" xt=-0.1 yt=0.5 length=0.6 size=1
	''')
Plot('warp1-l','warp1 label1','Overlay')
Plot('warp2-l','warp2 label1','Overlay')

Plot('dif1-l','dif1 label2 label3 label4 label5','Overlay')
Plot('dif2-l','dif2 label2 label3 label4 label5','Overlay')
Plot('dif3-l','dif3 label2 label3 label4 label5','Overlay')
Plot('dif4-l','dif4 label2 label3 label4 label5','Overlay')
Plot('dif5-l','dif5 label2 label3 label4 label5','Overlay')

Plot('duri-slice','slice0 slice1 slice2 slice3 slice4 slice5','SideBySideAniso')
Result('duri-slice','duri-warp ss0 ss1 ss2 ss3 ss4 ss5','Overlay')
Plot('duri-warp','slice0 warp1-l warp2-l warp3 warp4 warp5','SideBySideAniso')
Result('duri-warp','duri-warp ss0 ss1 ss2 ss3 ss4 ss5','Overlay')
Plot('duri-dif','slice0 dif1-l dif2-l dif3-l dif4-l dif5-l','SideBySideAniso')
Result('duri-dif','duri-dif ss0 ss1 ss2 ss3 ss4 ss5','Overlay')

for i in range(1,6):
    slice = 'slice%d' % i

    # Warping scan
    ##############
    scan = 'scan%d' % i   
    scann = 'scann%d' % i
    rect1='rect1-%d' %i
    rect2='rect2-%d' %i
    rect3='rect3-%d' %i
    
    Flow(rect1,scan,'math output="input*input"|scale axis=3| mask min=0.15 |dd type=float|math output="-%g*input+%g"'%(rt_max-rt_min,rt_max))
    Flow(rect2,scan,'math output="input*input"|scale axis=3| mask min=0.25 |dd type=float|math output="-%g*input+%g"'%(rg_max-rg_min,rg_max))
    Flow(rect3,scan,'math output="input*input"|scale axis=3| mask min=0.25 |dd type=float|math output="-%g*input+%g"'%(rg_max-rg_min,rg_max))
    Greyr(rect1,'')
    Greyr(rect2,'')
    Greyr(rect3,'')
    
    Flow(scann,[slice,'slice0',rect1,rect2,rect3],
         '''
         warpscann other=${SOURCES[1]} niter=100  mode=1
         ng=%d g0=%g dg=%g rect1=${SOURCES[2]} rect2=${SOURCES[3]} rect3=${SOURCES[4]}
         ''' % (ng,g0,dg))
    Result(scann,
           '''
           byte allpos=y bar=bar.rsf |
           grey3 flat=n frame1=200 frame2=50 frame3=36
           color=j wanttitle=n
           label1=Time unit1=s
           label2="Relative Stretch" barlabel=Energy barunit=
           label3="X distance" unit3=km scalebar=y
           maxval=0.8 minval=0.0
           ''')    

    # Pick the stretch
    pick = 'pickn%d' % i
    Flow(pick,scann,'pick rect1=20 rect2=10 vel0=1 | window')
    Result(pick,
           '''
           grey color=j scalebar=y wanttitle=n 
           label1=Time unit1=s label2="X distance" unit2=km bias=1 barlabel="Relative stretch" barunit= bias=1 clip=0.006 minval=0.997 maxval=1.007
           ''')

    # Convert stretch to shift
    shift = 'shiftn%d' % i
    Flow(shift,pick,'math output="(input-1)*x1" ')
        
    # Apply the stretch
    warp = 'warpn%d' % i
    Flow(warp,[slice,'slice0',shift],
         '''
         warp1 other=${SOURCES[1]} warpin=${SOURCES[2]}
         verb=1 nliter=0 
         ''')
    diff = 'difn%d' % i    
    Flow(diff,[warp,'slice0'],'add scale=1,-1 ${SOURCES[1]}')

    # display
    Plot(warp,'grey color=g wanttitle=n wheretitle=t wherexlabel=b wantaxis=n')
    Plot(diff,[diff,'clip.par'],
         'grey color=g par=${SOURCES[1]} wanttitle=n wheretitle=t wherexlabel=b wantaxis=n parallel2=n font=2 format2="%3.2f" labelsz=11')  


# non-stationary
Plot('stka2-n','slice0 warpn1 warpn2','SideBySideAniso')
Result('stka2-n','stka2-n s0 s1 s2','Overlay')

Plot('stkb2-n','warpn3 warpn4 warpn5','SideBySideAniso')
Result('stkb2-n','stkb2-n s3 s4 s5','Overlay')

Plot('difa2-n','slice0 difn1 difn2','SideBySideAniso')
Result('difa2-n','difa2-n s0 s1 s2','Overlay')

Plot('difb2-n','difn3 difn4 difn5','SideBySideAniso')
Result('difb2-n','difb2-n s3 s4 s5','Overlay')

Plot('difc2-n','slice0 difn1 difn5','SideBySideAniso')
Result('difc2-n','difc2-n s0 s1 s5','Overlay')

Plot('warpn1-l','warpn1 label11','Overlay')
Plot('warpn2-l','warpn2 label11','Overlay')

Plot('duri-warp-n','slice0 warpn1-l warpn2-l warpn3 warpn4 warpn5','SideBySideAniso')
Result('duri-warp-n','duri-warp-n ss0 ss1 ss2 ss3 ss4 ss5','Overlay')

Plot('difn1-l','difn1 label2 label3 label4 label5','Overlay')
Plot('difn2-l','difn2 label2 label3 label4 label5','Overlay')
Plot('difn3-l','difn3 label2 label3 label4 label5','Overlay')
Plot('difn4-l','difn4 label2 label3 label4 label5','Overlay')
Plot('difn5-l','difn5 label2 label3 label4 label5','Overlay')
Plot('duri-dif-n','slice0 difn1-l difn2-l difn3-l difn4-l difn5-l','SideBySideAniso')
Result('duri-dif-n','duri-dif-n ss0 ss1 ss2 ss3 ss4 ss5','Overlay')

Flow('dif1-z','dif1','window min1=0.25 max1=0.28')
Flow('dif2-z','dif2','window min1=0.25 max1=0.28')
Flow('dif3-z','dif3','window min1=0.25 max1=0.28')
Flow('dif4-z','dif4','window min1=0.25 max1=0.28')
Flow('dif5-z','dif5','window min1=0.25 max1=0.28')

Flow('difn1-z','difn1','window min1=0.25 max1=0.28')
Flow('difn2-z','difn2','window min1=0.25 max1=0.28')
Flow('difn3-z','difn3','window min1=0.25 max1=0.28')
Flow('difn4-z','difn4','window min1=0.25 max1=0.28')
Flow('difn5-z','difn5','window min1=0.25 max1=0.28')

# ,vppen='txscale=1.5 screenratio=0.5'
# 3-D registration

Flow('b0','m0','window n1=10 f1=200 | stack axis=1')
Result('b0','grey wanttitle=n transp=n yreverse=n label1="X distance" label2="Y distance" wherexlabel=b wantaxis=n color=j')

# Warping scan
##############
for i in range(1,3):
    j = 'j%d' % i
    s = 's%d' % i
    
    Flow(s,[j,'j0'],
         '''
         warpscan other=${SOURCES[1]} niter=100
         ng=%d g0=%g dg=%g rect1=20 rect3=3 rect4=3 
         ''' % (ng,g0,dg))

    # Pick the stretch
    p = 'p%d' % i
    Flow(p,s,'pick rect1=20 rect2=5 rect3=5 vel0=1 | window')

    # Convert stretch to shift
    h = 'h%d' % i
    Flow(h,p,
         '''
         math output="(input-1)*x1" |
         transp plane=13 | remap1 n1=71 d1=0.005 | transp plane=13 |
         transp | remap1 n1=72 d1=0.005 | transp
         ''')

    m = 'm%d' % i
    w = 'w%d' % i

    # Apply the stretch
    Flow(w,[m,'m0',h],
         '''
         warp1 other=${SOURCES[1]} warpin=${SOURCES[2]}
         verb=1 nliter=0 
         ''')
    
    t = 't%d' % i
    b = 'b%d' % i
    
    Flow(t,w,'window n1=10 f1=200 | stack axis=1')
    Flow(b,m,'window n1=10 f1=200 | stack axis=1')

    Result(b,'grey wanttitle=n transp=n yreverse=n label1="X distance" label2="Y distance" wherexlabel=b wantaxis=n color=j')
    Result(t,'grey wanttitle=n transp=n yreverse=n label1="X distance" label2="Y distance" wherexlabel=b wantaxis=n color=j')

End()
