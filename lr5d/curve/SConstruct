from rsf.proj import*
from rsf.prog import RSFROOT

def Grey(data,other): 
	Result(data,'put d1=0.004 o1=0 d2=1 o2=0 | grey  labelfat=4 font=2 titlefat=4 clip=0.15 minval=-0.5 maxval=0.5 label2=Trace unit2="" label1=Time unit1="s" title="" wherexlabel=b scalebar=y color=g %s'%other)

def Grey3(data,other):
      Result(data,
       '''
       put d1=0.008 o1=0 o3=1 o2=1 |  byte  clip=0.15 |
       grey3 wanttitle=y flat=n labelfat=4 font=2 titlefat=4
       label1="Time" unit1=s label2=X label3=Y unit3=
       frame1=30 frame2=7 frame3=6 point1=0.85 point2=0.75 screenratio=1.4
       clip= title= wheretitle=t 
       scalebar=n %s
       '''%other)

def Grey3_1(data,other):
      Result(data,
       '''
       put d1=0.008 o1=0 o3=1 o2=1 |  byte  clip=0.15 |
       grey3 wanttitle=y flat=n labelfat=4 font=2 titlefat=4
       label1="Time" unit1=s label2=HX label3=HY unit3=
       frame1=30 frame2=3 frame3=5 point1=0.85 point2=0.75 screenratio=1.4
       clip= title= wheretitle=t 
       scalebar=n %s
       '''%other)

def Grey3_simi(data,other):
      Result(data,
       '''
       put d1=0.008 o1=0 o3=1 o2=1 |  byte  clip=1 bar=bar.rsf|
       grey3 wanttitle=y flat=n labelfat=4 font=2 titlefat=4
       label1="Time" unit1=s label2=HX label3=HY unit3=
       frame1=30 frame2=3 frame3=5 point1=0.85 point2=0.75 screenratio=1.4
       clip= title= wheretitle=t scalebar=y color=j
       %s
       '''%other)
       
########################################################################
# INITIALIZATION
########################################################################
matlab         = WhereIs('matlab')
matROOT = '../matfun'
matfun = 'Curve'
matlabpath = os.environ.get('MATLABPATH',os.path.join(RSFROOT,'lib'))

if not matlab:
    sys.stderr.write('\nCannot find Matlab.\n')
    sys.exit(1)

############################################################
## generate and process synthetic data
############################################################
Flow('curve5d-clean-t curve5d-noisy-t curve5d-decimated-t curve5d-lmafit-t curve5d-svd-t curve5d-lanb-t curve5d-rsvd-t',[os.path.join(matROOT,matfun+'.m')],
     '''MATLABPATH=%(matlabpath)s %(matlab)s 
     -nosplash -nojvm -r "addpath %(matROOT)s;%(matfun)s('${TARGETS[0]}','${TARGETS[1]}','${TARGETS[2]}','${TARGETS[3]}','${TARGETS[4]}','${TARGETS[5]}','${TARGETS[6]}');quit"
     '''%vars(),stdin=0,stdout=-1)

put='n1=101 n2=32 n3=32 n4=5 n5=5 d1=0.004 d2=1 d3=1 d4=1 d5=1 o1=0 o2=1 o3=1 o4=1 o5=1'
Flow('curve5d-clean','curve5d-clean-t','put %s'%put)
Flow('curve5d-noisy','curve5d-noisy-t','put %s'%put)
Flow('curve5d-decimated','curve5d-decimated-t','put %s'%put)
Flow('curve5d-lmafit','curve5d-lmafit-t','put %s'%put)
Flow('curve5d-svd','curve5d-svd-t','put %s'%put)
Flow('curve5d-lanb','curve5d-lanb-t','put %s'%put)
Flow('curve5d-rsvd','curve5d-rsvd-t','put %s'%put)

### Reconstruction errors and removed noise
Flow('curve5d-r-lmafit','curve5d-clean curve5d-lmafit',' add scale=1,-1 ${SOURCES[1]}')
Flow('curve5d-r-svd','curve5d-clean curve5d-svd',' add scale=1,-1 ${SOURCES[1]}')
Flow('curve5d-r-lanb','curve5d-clean curve5d-lanb',' add scale=1,-1 ${SOURCES[1]}')
Flow('curve5d-r-rsvd','curve5d-clean curve5d-rsvd',' add scale=1,-1 ${SOURCES[1]}')
Flow('curve5d-n-lmafit','curve5d-noisy curve5d-lmafit',' add scale=1,-1 ${SOURCES[1]}')
Flow('curve5d-n-svd','curve5d-noisy curve5d-svd',' add scale=1,-1 ${SOURCES[1]}')
Flow('curve5d-n-lanb','curve5d-noisy curve5d-lanb',' add scale=1,-1 ${SOURCES[1]}')
Flow('curve5d-n-rsvd','curve5d-noisy curve5d-rsvd',' add scale=1,-1 ${SOURCES[1]}')


### Choose the 3D cube for display
Flow('curve5d-clean-3d','curve5d-clean','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-noisy-3d','curve5d-noisy','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-decimated-3d','curve5d-decimated','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-lmafit-3d','curve5d-lmafit','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-svd-3d','curve5d-svd','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-lanb-3d','curve5d-lanb','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-rsvd-3d','curve5d-rsvd','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-r-lmafit-3d','curve5d-r-lmafit','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-r-svd-3d','curve5d-r-svd','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-r-lanb-3d','curve5d-r-lanb','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-r-rsvd-3d','curve5d-r-rsvd','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-n-lmafit-3d','curve5d-n-lmafit','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-n-svd-3d','curve5d-n-svd','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-n-lanb-3d','curve5d-n-lanb','window n2=1 n3=1 f2=5 f3=5')
Flow('curve5d-n-rsvd-3d','curve5d-n-rsvd','window n2=1 n3=1 f2=5 f3=5')

j=3
Flow('curve5d-clean-3d-1','curve5d-clean','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-noisy-3d-1','curve5d-noisy','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-decimated-3d-1','curve5d-decimated','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-lmafit-3d-1','curve5d-lmafit','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-svd-3d-1','curve5d-svd','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-lanb-3d-1','curve5d-lanb','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-rsvd-3d-1','curve5d-rsvd','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-r-lmafit-3d-1','curve5d-r-lmafit','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-r-svd-3d-1','curve5d-r-svd','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-r-lanb-3d-1','curve5d-r-lanb','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-r-rsvd-3d-1','curve5d-r-rsvd','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-n-lmafit-3d-1','curve5d-n-lmafit','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-n-svd-3d-1','curve5d-n-svd','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-n-lanb-3d-1','curve5d-n-lanb','window n4=1 n5=1 f4=%d f5=%d'%(j,j))
Flow('curve5d-n-rsvd-3d-1','curve5d-n-rsvd','window n4=1 n5=1 f4=%d f5=%d'%(j,j))


### Ploting for curve5d
Grey3('curve5d-noisy-3d','color=r title=Noisy')
Grey3('curve5d-decimated-3d','color=r title=Decimated')
Grey3('curve5d-clean-3d','color=r title=Clean')
Grey3('curve5d-lmafit-3d','color=r title="SVD-free"')
Grey3('curve5d-svd-3d','color=r title=SVD')
Grey3('curve5d-lanb-3d','color=r title=LanB')
Grey3('curve5d-rsvd-3d','color=r title=RSVD')
Grey3('curve5d-r-lmafit-3d','color=r title="SVD-free"')
Grey3('curve5d-r-svd-3d','color=r title=SVD')
Grey3('curve5d-r-lanb-3d','color=r title=LanB')
Grey3('curve5d-r-rsvd-3d','color=r title=RSVD')
Grey3('curve5d-n-lmafit-3d','color=r title="SVD-free"')
Grey3('curve5d-n-svd-3d','color=r title=SVD')
Grey3('curve5d-n-lanb-3d','color=r title=LanB')
Grey3('curve5d-n-rsvd-3d','color=r title=RSVD')

Grey3_1('curve5d-noisy-3d-1','color=r title=Noisy')
Grey3_1('curve5d-decimated-3d-1','color=r title=Decimated')
Grey3_1('curve5d-clean-3d-1','color=r title=Clean')
Grey3_1('curve5d-lmafit-3d-1','color=r title="SVD-free"')
Grey3_1('curve5d-svd-3d-1','color=r title=SVD')
Grey3_1('curve5d-lanb-3d-1','color=r title=LanB')
Grey3_1('curve5d-rsvd-3d-1','color=r title=RSVD')
Grey3_1('curve5d-r-lmafit-3d-1','color=r title="SVD-free"')
Grey3_1('curve5d-r-svd-3d-1','color=r title=SVD')
Grey3_1('curve5d-r-lanb-3d-1','color=r title=LanB')
Grey3_1('curve5d-r-rsvd-3d-1','color=r title=RSVD')
Grey3_1('curve5d-n-lmafit-3d-1','color=r title="SVD-free"')
Grey3_1('curve5d-n-svd-3d-1','color=r title=SVD')
Grey3_1('curve5d-n-lanb-3d-1','color=r title=LanB')
Grey3_1('curve5d-n-rsvd-3d-1','color=r title=RSVD')

Flow('simi-curve5d-noisy-3d-1','curve5d-noisy-3d-1 curve5d-clean-3d-1','similarity other=${SOURCES[1]} niter=20 rect1=2 rect2=2 rect3=2')
Flow('simi-curve5d-decimated-3d-1','curve5d-decimated-3d-1 curve5d-clean-3d-1','similarity other=${SOURCES[1]} niter=20 rect1=2 rect2=2 rect3=2')
Flow('simi-curve5d-svd-3d-1','curve5d-svd-3d-1 curve5d-clean-3d-1','similarity other=${SOURCES[1]} niter=20 rect1=2 rect2=2 rect3=2')
Flow('simi-curve5d-lmafit-3d-1','curve5d-lmafit-3d-1 curve5d-clean-3d-1','similarity other=${SOURCES[1]} niter=20 rect1=2 rect2=2 rect3=2')
Flow('simi-curve5d-r-svd-3d-1','curve5d-r-svd-3d-1 curve5d-clean-3d-1','similarity other=${SOURCES[1]} niter=20 rect1=2 rect2=2 rect3=2')
Flow('simi-curve5d-r-lmafit-3d-1','curve5d-r-lmafit-3d-1 curve5d-clean-3d-1','similarity other=${SOURCES[1]} niter=20 rect1=2 rect2=2 rect3=2')
Flow('simi-curve5d-n-svd-3d-1','curve5d-n-svd-3d-1 curve5d-clean-3d-1','similarity other=${SOURCES[1]} niter=20 rect1=2 rect2=2 rect3=2')
Flow('simi-curve5d-n-lmafit-3d-1','curve5d-n-lmafit-3d-1 curve5d-clean-3d-1','similarity other=${SOURCES[1]} niter=20 rect1=2 rect2=2 rect3=2')
Grey3_simi('simi-curve5d-noisy-3d-1','scalebar=y color=j clip=1.0 minval=0 maxval=1.0' )
Grey3_simi('simi-curve5d-decimated-3d-1','scalebar=y color=j clip=1.0 minval=0 maxval=1.0' )
Grey3_simi('simi-curve5d-svd-3d-1','scalebar=y color=j clip=1.0 minval=0 maxval=1.0' )
Grey3_simi('simi-curve5d-lmafit-3d-1','scalebar=y color=j clip=1.0 minval=0 maxval=1.0' )
Grey3_simi('simi-curve5d-r-svd-3d-1','scalebar=y color=j clip=1.0 minval=0 maxval=1.0' )
Grey3_simi('simi-curve5d-r-lmafit-3d-1','scalebar=y color=j clip=1.0 minval=0 maxval=1.0' )
Grey3_simi('simi-curve5d-n-svd-3d-1','scalebar=y color=j clip=1.0 minval=0 maxval=1.0' )
Grey3_simi('simi-curve5d-n-lmafit-3d-1','scalebar=y color=j clip=1.0 minval=0 maxval=1.0' )


End()
