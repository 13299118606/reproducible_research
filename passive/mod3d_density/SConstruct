from rsf.proj import *
#### COPYRIGHT: Authors 
#### XXXX University (need to be updated because of blind review process)

#### Part I: Specifying parameters ####
nt=1501		#number of samples
dt=0.001	#temporal sampling
nb=30		#size of ABC layers
ct=0.01		#ABC parameter
jsnap=4		#output wavefield interval
ng=4 		#number of groups
nz=141		#samples in Z
nx=141		#samples in X
ny=141 		#samples in Y
dz=20		#sampling in Z
dx=20		#sampling in X
dy=20		#sampling in Y
ic2=1		#squared cross-correlation IC

#for synthetic test
ns=3
sz='50,70,90'
sx='50,60,70'
sy='50,60,70'
f='10,10,10'
t='0.2,0.35,0.5'
A='1,2,2'

#### Part II: Compiling the program ####
exe=Program('../mod3d/mod3d.c')

#### Part III: Creating/Inputing the velocity model ####
Flow('vel',None,'spike n1=%d n2=%d n3=%d d1=%g d2=%g d3=%g mag=4600 | math output="1500+1.2*x1"'%(nz,nx,ny,dz,dx,dy))
## predefining source locatons, plotting the sources onto the velocity model
Flow('src',None,
     '''
     spike n1=%d n2=%d n3=%d d1=%g d2=%g d3=%g nsp=%d
     k1=%s
     k2=%s
     k3=%s
     mag=200000 | smooth rect1=4 rect2=4 rect3=4 repeat=1 
     '''%(nz,nx,ny,dz,dx,dy,ns,sz,sx,sy))
Flow('sov','vel src','add mode=a ${SOURCES[1]} ')
## plotting the velocity models with highlights on source locations
Result('vel1','vel src','add mode=a ${SOURCES[1]} |byte bar=bar.rsf mean=y|grey3  flat=n allpos=y bias=1500 color=j scalebar=n maxval=2200 title="Source Location and Velocity Model" barlabel="V" barunit="m/s" label1=Depth label2="Distance in X" label3="Distance in Y" unit1=m unit2=m unit3=m frame1=49 frame2=49 frame3=49 scalebar=y')
Result('vel2','vel src','add mode=a ${SOURCES[1]} |byte bar=bar.rsf mean=y|grey3  flat=n allpos=y bias=1500 color=j scalebar=n maxval=2200 title="Source Location and Velocity Model" barlabel="V" barunit="m/s" label1=Depth label2="Distance in X" label3="Distance in Y" unit1=m unit2=m unit3=m frame1=69 frame2=59 frame3=59 scalebar=y')
Result('vel3','vel src','add mode=a ${SOURCES[1]} |byte bar=bar.rsf mean=y|grey3  flat=n allpos=y bias=1500 color=j scalebar=n maxval=2200 title="Source Location and Velocity Model" barlabel="V" barunit="m/s" label1=Depth label2="Distance in X" label3="Distance in Y" unit1=m unit2=m unit3=m frame1=89 frame2=69 frame3=69 scalebar=y')

#### Part IV: Generating/Inputing the recorded passive seismic data ####
Flow('data0','vel %s'%exe[0],
     '''
     ${SOURCES[1]} verb=y cmplx=n ps=y nt=%d dt=%g jsnap=1 abc=y nbt=%d ct=%g src=0 ns=%d
     spz=%s
     spx=%s
     spy=%s
     f0=%s
     t0=%s
     A=%s
     '''%(nt,dt,nb,ct,ns,sz,sx,sy,f,t,A))

#density: 1/4-1600 traces:  cut j2=2 j3=2
#density2: 1/9-729 traces:  cut j2=3 |cut j3=3|cut f2=1 j2=3|cut f3=1 j3=3 '''frame1=300 frame2=29 frame3=8
#density3: 1/16-400 traces: cut j2=4 |cut j3=4|cut f2=1 j2=4|cut f2=2 j2=4|cut f3=1 j3=4 |cut f3=2 j3=4 '''frame1=300 frame2=27 frame3=7
#density4:1/25-256 traces: cut j2=5 |cut j3=5|cut f2=1 j2=5|cut f2=2 j2=5|cut f2=3 j2=5|cut f3=1 j3=5 |cut f3=2 j3=5|cut f3=3 j3=5 '''frame1=300 frame2=24 frame3=4
#density5:1/36-169 traces: cut j2=6 |cut j3=6|cut f2=1 j2=6|cut f2=2 j2=6|cut f2=3 j2=6|cut f2=4 j2=6|cut f3=1 j3=6 |cut f3=2 j3=6|cut f3=3 j3=6 |cut f3=4 j3=6'''frame1=300 frame2=23 frame3=5
#density6:1/49-121 traces: cut j2=7 |cut j3=7|cut f2=1 j2=7|cut f2=2 j2=7|cut f2=3 j2=7|cut f2=4 j2=7|cut f2=5 j2=7|cut f3=1 j3=7 |cut f3=2 j3=7|cut f3=3 j3=7 |cut f3=4 j3=7|cut f3=5 j3=7'''frame1=300 frame2=27 frame3=6
#density7:1/64-100 traces: cut j2=8 |cut j3=8|cut f2=1 j2=8|cut f2=2 j2=8|cut f2=3 j2=8|cut f2=4 j2=8|cut f2=5 j2=8|cut f2=6 j2=8|cut f3=1 j3=8 |cut f3=2 j3=8|cut f3=3 j3=8 |cut f3=4 j3=8|cut f3=5 j3=8|cut f3=6 j3=8'''frame1=300 frame2=23 frame3=7
#density8:1/81-81 traces: cut j2=9 |cut j3=9|cut f2=1 j2=9|cut f2=2 j2=9|cut f2=3 j2=9|cut f2=4 j2=9|cut f2=5 j2=9|cut f2=6 j2=9|cut f2=7 j2=9|cut f3=1 j3=9 |cut f3=2 j3=9|cut f3=3 j3=9 |cut f3=4 j3=9|cut f3=5 j3=9|cut f3=6 j3=9|cut f3=7 j3=9'''frame1=300 frame2=26 frame3=8
#NO:1/100- traces: cut j2=10 |cut j3=10|cut f2=1 j2=10|cut f2=2 j2=10|cut f2=3 j2=10|cut f2=4 j2=10|cut f2=5 j2=10|cut f2=6 j2=10|cut f2=7 j2=10|cut f2=8 j2=10|cut f3=1 j3=10 |cut f3=2 j3=10|cut f3=3 j3=10 |cut f3=4 j3=10|cut f3=5 j3=10|cut f3=6 j3=10|cut f3=7 j3=10|cut f3=8 j3=10'''frame1=300 frame2=26 frame3=8
#density9:1/400-16 traces: cut f2=0 n2=19 | cut f2=20 n2=19 | cut f2=40 n2=19 | f2=60 n2=19 | cut f3=0 n3=19 | cut f3=20 n3=19 | cut f3=40 n3=19 | f3=60 n3=19'''frame1=300 frame2=26 frame3=8
#density10: 1/800-8 traces:

## add noise and sub samples
Flow('den6-data','data0','noise var=0.005 type=y seed=12005|cut j2=7 |cut j3=7|cut f2=1 j2=7|cut f2=2 j2=7|cut f2=3 j2=7|cut f2=4 j2=7|cut f2=5 j2=7|cut f3=1 j3=7 |cut f3=2 j3=7|cut f3=3 j3=7 |cut f3=4 j3=7|cut f3=5 j3=7')

Flow('den8-data','data0','noise var=0.005 type=y seed=12005|cut j2=9 |cut j3=9|cut f2=1 j2=9|cut f2=2 j2=9|cut f2=3 j2=9|cut f2=4 j2=9|cut f2=5 j2=9|cut f2=6 j2=9|cut f2=7 j2=9|cut f3=1 j3=9 |cut f3=2 j3=9|cut f3=3 j3=9 |cut f3=4 j3=9|cut f3=5 j3=9|cut f3=6 j3=9|cut f3=7 j3=9')

Flow('den9-data','data0','noise var=0.001 type=y seed=12005|cut f2=0 n2=9 | cut f2=10 n2=19 | cut f2=30 n2=19 | cut f2=50 n2=19|cut f2=70 | cut f3=0 n3=9 | cut f3=10 n3=19 | cut f3=30 n3=19 | cut f3=50 n3=19 |cut f3=70')

Flow('den10-data','data0','noise var=0.001 type=y seed=12005|cut f2=0 n2=9 | cut f2=10 n2=19 | cut f2=30 n2=19 | cut f2=50 n2=19|cut f2=70 | cut f3=0 n3=10 | cut f3=10 n3=19 | cut f3=30 n3=19 | cut f3=50 n3=20 |cut f3=70')

#### Part V: Backward propagating of the grouped receiver wavefield ####
dg=(int)(nx-nb*2)/ng
print('Group interval is',dg)

for name in ['den6','den8','den9','den10']:
  print(name)
  snaps_list = []
  src_list = ''
  for i in range(ng):
    mask = name+'-'+'mask%d' %i
    data = name+'-'+'data_mask%d' %i
    img = name+'-'+'img%d' %i
    snaps = name+'-'+'snaps%d' %i
    
    Flow(mask,None,'spike n1=%d n2=%d mag=1 k1=%d l1=%d k2=%d l2=%d | sfdd type=int' %(nx-nb*2,ny-nb*2,dg*i+1,dg*i+dg,1,ny-nb*2))
    Flow(data,[name+'-'+'data',mask],'headercut mask=${SOURCES[1]}')
    Flow([img,snaps],['vel',data,'%s'%exe[0]],
         '''
         ${SOURCES[2]} snaps=${TARGETS[1]} verb=y cmplx=n vref=1500 ps=y abc=y nbt=%d ct=%g tri=y dat=${SOURCES[1]} jsnap=%d
         '''%(nb,ct,jsnap))
    Result(snaps,'window j3=10 | grey gainpanel=a')
    Result(img,'grey')
    snaps_list += [snaps]
    src_list += ' ${SOURCES[%d]}' %(i+1)

  ## view the grouped data
  Result(name+'-'+'data_mask0','byte | window max1=1.3|grey3 flat=n frame1=400 frame2=10 frame3=40 clip=0.5 title="Group 1" label2="Distance in X" label3="Distance in Y" unit2=m unit3=m  point1=0.7 point2=0.6 ')
  Result(name+'-'+'data_mask1','byte | window max1=1.3|grey3 flat=n frame1=400 frame2=30 frame3=40 clip=0.5 title="Group 2" label2="Distance in X" label3="Distance in Y" unit2=m unit3=m  point1=0.7 point2=0.6')
  Result(name+'-'+'data_mask2','byte | window max1=1.3|grey3 flat=n frame1=400 frame2=50 frame3=40 clip=0.5 title="Group 3" label2="Distance in X" label3="Distance in Y" unit2=m unit3=m  point1=0.7 point2=0.6')
  Result(name+'-'+'data_mask3','byte | window max1=1.3|grey3 flat=n frame1=400 frame2=70 frame3=40 clip=0.5 title="Group 4" label2="Distance in X" label3="Distance in Y" unit2=m unit3=m  point1=0.7 point2=0.6')

  #### Part VI: Applying the cross-correlation imaging condition ####
  if ic2:
    if ng==4:
      Flow(name+'-'+'ccr0',snaps_list,'math a=${SOURCES[1]} b=${SOURCES[2]} c=${SOURCES[3]} output="input^2*a^2*b^2*c^2"')
    elif ng==6:
      Flow(name+'-'+'ccr0',snaps_list,'math a=${SOURCES[1]} b=${SOURCES[2]} c=${SOURCES[3]} d=${SOURCES[4]} e=${SOURCES[5]} output="input^2*a^2*b^2*c^2*d^2*e^2"')
    elif ng==8:
      Flow(name+'-'+'ccr0',snaps_list,'math a=${SOURCES[1]} b=${SOURCES[2]} c=${SOURCES[3]} d=${SOURCES[4]} e=${SOURCES[5]} f=${SOURCES[6]} g=${SOURCES[7]} output="input^2*a^2*b^2*c^2*d^2*e^2*f^2*g^2"')
    elif ng==10:
      Flow(name+'-'+'ccr0',snaps_list,'math a=${SOURCES[1]} b=${SOURCES[2]} c=${SOURCES[3]} d=${SOURCES[4]} e=${SOURCES[5]} f=${SOURCES[6]} g=${SOURCES[7]} h=${SOURCES[8]} i=${SOURCES[9]} output="input^2*a^2*b^2*c^2*d^2*e^2*f^2*g^2*h^2*i^2"')
  else:
    Flow(name+'-'+'ccr0',snaps_list,'cat axis=5 ${SOURCES[1:%d]} | stack prod=y axis=5'%len(snaps_list))

  Flow(name+'-'+'location0',name+'-'+'ccr0','stack axis=4 |pad beg1=%d end1=%d beg2=%d end2=%d beg3=%d end3=%d| put o1=0 o2=0 o3=0'%(nb,nb,nb,nb,nb,nb))


Result('data-d6','den6-data','byte |grey3 flat=n frame1=300 frame2=27 frame3=6 clip=0.1 title="Recorded data (121 traces)" unit2=m unit3=m  point1=0.7 point2=0.6')
Result('data-d8','den8-data','byte |grey3 flat=n frame1=300 frame2=26 frame3=8 clip=0.1 title="Recorded data (81 traces)" unit2=m unit3=m  point1=0.7 point2=0.6')
Result('data-d9','den9-data','byte |grey3 flat=n frame1=300 frame2=9 frame3=9 clip=0.1 title="Recorded data (16 traces)" unit2=m unit3=m  point1=0.7 point2=0.6')
Result('data-d10','den10-data','byte |grey3 flat=n frame1=300 frame2=9 frame3=29 clip=0.1 title="Recorded data (8 traces)" unit2=m unit3=m  point1=0.7 point2=0.6')

Result('location1-density6','den6-location0','threshold1 thr=0.08|byte |grey3 flat=n frame1=49 frame2=51 frame3=49 pclip=99.999999 title="Image (121 traces)" label1=Depth label2="Distance in X" label3="Distance in Y" unit1=m unit2=m unit3=m  point1=0.7 point2=0.6')
Result('location1-density8','den8-location0','threshold1 thr=0.08|byte |grey3 flat=n frame1=49 frame2=51 frame3=49 pclip=99.999999 title="Image (81 traces)" label1=Depth label2="Distance in X" label3="Distance in Y" unit1=m unit2=m unit3=m  point1=0.7 point2=0.6')
Result('location1-density9','den9-location0','threshold1 thr=0.08|byte |grey3 flat=n frame1=49 frame2=51 frame3=49 pclip=99.999999 title="Image (16 traces)" label1=Depth label2="Distance in X" label3="Distance in Y" unit1=m unit2=m unit3=m  point1=0.7 point2=0.6')
Result('location1-density10','den10-location0','threshold1 thr=0.15|byte pclip=99.99 |grey3 flat=n frame1=49 frame2=51 frame3=49 pclip=99.999999 title="Image (8 traces)" label1=Depth label2="Distance in X" label3="Distance in Y" unit1=m unit2=m unit3=m  point1=0.7 point2=0.6')



End()
