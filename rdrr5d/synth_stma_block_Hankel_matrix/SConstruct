from rsf.proj import*
from rsf.prog import RSFROOT
from math import pi
# Data size: 301*61*61
 
def Grey3(data,other):
	Result(data,
       '''
       byte clip=0.4 |
       grey3 flat=n frame1=50 frame2=5 frame3=0 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s unit2=trace unit3=trace title=
       screenratio=1.4 color=grey font=104 %s'''%other)

def Grey3e(data,other,clip):
	Result(data,
       '''
       byte clip=%g |
       grey3 flat=n frame1=40 frame2=2 frame3=5 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s title=
       screenratio=1.4 color=g font=104 %s'''%(clip,other))

def Grey3s(data,other,clip):
	Result(data,
       '''
       byte clip=%g  gainpanel=all  bar=bar.rsf|
       grey3 flat=n frame1=40 frame2=2 frame3=5 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s title=
       screenratio=1.4 color=j scalebar=y maxval=1 minval=0 %s'''%(clip,other))
       
def Grey(data,other):
	Result(data,
       '''
       grey label2=Trace label1="Time" unit1=s clip=0.9 title=
       screenratio=1.4 color=g %s'''%other)

#def Wig(data,other):
#	Result(data,
#       '''
#       wiggle poly=y transp=y yreverse=y label2=Trace label1="Time" unit1=s clip=0.4 title=
#       screenratio=1.4 color=g %s'''%other)

def Wig(data,other): 
	Result(data,'''
				put d1=0.004 |
				grey color=b color=b transp=y yreverse=y screenratio=1.4
				wanttitle=y flat=n labelfat=4 font=2 titlefat=4				
				label2=Trace unit2="" label1="Time" unit1=s
				title="" wherexlabel=b wheretitle=t poly=y 
				wheretitle=t wherexlabel=b clip=0.4 labelsz=10 color=g %s'''%other)

def Graph(data,other):
	Result(data,'graph label1="Time" label2="Amplitude" unit2= unit1="s" labelsz=10 labelfat=4 font=2 titlesz=10 titlefat=4 title=" Amplitude comparison" wherexlabel=b wheretitle=t screenratio=0.5 %s' %other)
	
## Load data
########################################################################
# INITIALIZATION
########################################################################
matlab         = WhereIs('matlab')
matROOT = '../matfun'
matfun = 'synth_stma'
matlabpath = os.environ.get('MATLABPATH',os.path.join(RSFROOT,'lib'))

if not matlab:
   sys.stderr.write('\nCannot find Matlab.\n')
   sys.exit(1)

############################################################
## generate and process synthetic data
############################################################
Flow('synth-stma1-0 synth-stma2-0',[os.path.join(matROOT,matfun+'.m')],
    '''MATLABPATH=%(matlabpath)s %(matlab)s 
    -nosplash -nojvm -r "addpath %(matROOT)s;%(matfun)s('${TARGETS[0]}','${TARGETS[1]}');quit"
    '''%vars(),stdin=0,stdout=-1)

Flow('synth-stma1','synth-stma1-0','put n2=11 n3=11 n4=11 n5=11 d1=0.004 d2=1 d3=1 d4=1 d5=1 o1=0 o2=1 o3=1 o4=1 o5=1')
Flow('synth-stma2','synth-stma2-0','put n2=11 n3=11 n4=11 n5=11 d1=0.004 d2=1 d3=1 d4=1 d5=1 o1=0 o2=1 o3=1 o4=1 o5=1')

Flow('synth-xy-stma1','synth-stma1','window n2=1 n3=1 f2=5 f3=5')
Flow('synth-xy-stma2','synth-stma2','window n2=1 n3=1 f2=5 f3=5')

Flow('synth-xy-s-stma1','synth-xy-stma1','window n2=1 f3=4')
Flow('synth-xy-s-stma2','synth-xy-stma2','window n2=1 f3=4')

Wig('synth-xy-s-stma1','title=Case:1')
Wig('synth-xy-s-stma2','title=Case:2')

Flow('synth-hxhy-stma1','synth-stma1','window n4=1 n5=1 f4=1 f5=2')
Flow('synth-hxhy-stma2','synth-stma2','window n4=1 n5=1 f4=1 f5=2')

Flow('synth-hxhy-s-stma1','synth-hxhy-stma1','window n3=1 f3=5')
Flow('synth-hxhy-s-stma2','synth-hxhy-stma2','window n3=1 f3=5')

Wig('synth-hxhy-s-stma1','title=Case:1')
Wig('synth-hxhy-s-stma2','title=Case:2')

End()
