from rsf.proj import *
from rsf.prog import RSFROOT
from math import pi
#from rsf.recipes.beg import server as private



def Grey(data,other):
	Result(data,
	'''
    window n4=1 n5=1 | 
    byte allpos=n clip=0.5 |
    grey3 title=  label2=Hx label3=Hy label1="Time" unit1=s 
    point1=0.8 point2=0.7 frame1=50 frame2=4 frame3=4
    parallel2=n o2num=0 d2num=0.1 n2tic=4 screenratio=1.3
    font=2 labelfat=2 titlefat=2 %s
    '''%other)

def Greym(data,other):
	Result(data,
	'''
    window n4=1 n5=1 | 
    byte allpos=n clip=1.1 bar=bar.rsf |
    grey3 title=  label2=Hx label3=Hy label1="Time" unit1=s 
    point1=0.8 point2=0.7 frame1=50 frame2=4 frame3=4
    parallel2=n o2num=0 d2num=0.1 n2tic=4 screenratio=1.3
    font=2 labelfat=2 titlefat=2 scalebar=y %s
    '''%other)

def Grey2(data,data0,other):
	Result(data,data0,
	'''
    window n2=1 f2=4 n3=1 f3=4 | 
    byte allpos=n clip=0.5 |
    grey3 title=  label2=X label3=Y label1="Time" unit1=s 
    point1=0.8 point2=0.7 frame1=50 frame2=4 frame3=4
    parallel2=n o2num=0 d2num=0.1 n2tic=4 screenratio=1.3
    font=2 labelfat=2 titlefat=2 %s
    '''%other)  

def Grey3(data,data0,other):
	Result(data,data0,
	'''
    window n4=1 n5=1 f4=2 f5=2 | put n2=400 n3=1 | window n2=380|
    grey title=  label2=Trace label3=Trace label1="Time" unit1=s 
    point1=0.8 point2=0.7 frame1=50 frame2=4 frame3=4
    parallel2=n o2num=0 d2num=0.1 n2tic=4 screenratio=0.3
    font=2 labelfat=2 titlefat=2 clip=0.5 %s
    '''%other)   
 
def Grey3fk(data,data0,other):
	Result(data,data0,
	'''
    window n4=1 n5=1 f4=2 f5=2 | fft1 | fft3 axis=2|fft3 axis=3| cabs|put n2=400 n3=1 | window n2=380|window max1=70|put o2=1 d2=1|
    grey title=  label2=Trace label2="Wavenumber Trace" label1="Frequency" unit1=Hz
    point1=0.8 point2=0.7 frame1=50 frame2=4 frame3=4
    parallel2=n screenratio=0.3
    font=2 labelfat=2 titlefat=2 clip=5 color=j allpos=y %s
    '''%other) 

########################################################################
# INITIALIZATION
########################################################################
matlab         = WhereIs('matlab')
matROOT = '../matfun'
matfun = 'Linear5da'
matlabpath = os.environ.get('MATLABPATH',os.path.join(RSFROOT,'lib'))

if not matlab:
   sys.stderr.write('\nCannot find Matlab.\n')
   sys.exit(1)

put="n1=100 o1=0 d1=0.004 n2=20 n3=20 n4=10 n5=10 o2=1 d2=1 o3=1 d3=1 o4=1 d4=1 o5=1 d5=1"
############################################################
## generate and process synthetic data
############################################################
Flow('la_obs5d-0 la_mask5d-0 la_drr5d-0',[os.path.join(matROOT,matfun+'.m')],
    '''MATLABPATH=%(matlabpath)s %(matlab)s 
    -nosplash -nojvm -r "addpath %(matROOT)s;%(matfun)s('${TARGETS[0]}','${TARGETS[1]}','${TARGETS[2]}');quit"
    '''%vars(),stdin=0,stdout=-1)

Flow('la_obs5d','la_obs5d-0',' put %s'%put)
Flow('la_mask5d','la_mask5d-0',' put %s'%put)
Flow('la_drr5d','la_drr5d-0',' put %s'%put)

# 5D APEF
Flow('la_apef5 la_mask5d2','la_obs5d la_mask5d',
     '''
     npef5 maskin=${SOURCES[1]} maskout=${TARGETS[1]} jump=2 
     a=4,2,2,1,1 niter=30 rect1=20 rect2=5 rect3=5 rect4=5 rect5=1 verb=y
     ''')
     
Flow('la_recon5d','la_obs5d la_apef5 la_mask5d',
     '''
     npef5_recon filt=${SOURCES[1]} mask=${SOURCES[2]} niter=30 verb=y 
     ''')

Grey('la_obs5d','')
Greym('la_mask5d','color=j')
Greym('la_mask5d2','color=j')
Grey('la_recon5d','')
Grey('la_drr5d','')

Grey2('la_obs5d-2','la_obs5d','')
Grey2('la_recon5d-2','la_recon5d','')

Grey3('la_obs5d-3','la_obs5d','')
Grey3('la_recon5d-3','la_recon5d','')
Grey3('la_drr5d-3','la_drr5d','')

Grey3fk('la_obs5d-3fk','la_obs5d','')
Grey3fk('la_recon5d-3fk','la_recon5d','')
Grey3fk('la_drr5d-3fk','la_drr5d','')

End()
