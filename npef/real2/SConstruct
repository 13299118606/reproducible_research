from rsf.proj import *
from math import pi
from rsf.prog import RSFROOT
#dealiase test
#from rsf.recipes.beg import server as private

Fetch('sean.HH','bp')

def Grey(data,other):
	Result(data,
	'''
    put o3=0 |
    byte allpos=n clip=622.105 |
    grey3 title=  label2=Trace label1="Time" unit1=s label3=Shot
    point1=0.8 point2=0.7 frame1=50 frame2=10 frame3=10
    parallel2=n o2num=0.1 d2num=0.2 n2tic=4 screenratio=1.3
    font=2 labelfat=2 titlefat=2 %s
    '''%other)

def Greym(data,other):
	Result(data,
	'''
    put o3=0 |
    byte allpos=n clip=1.1 bar=bar.rsf |
    grey3 title=  label2=Trace label1="Time" unit1=s label3=Shot
    point1=0.8 point2=0.7 frame1=50 frame2=10 frame3=10
    parallel2=n o2num=2 d2num=1 n2tic=2 screenratio=1.3
    font=2 labelfat=2 titlefat=2 %s scalebar=y
    '''%other)

def Grey3(data,data0,other):
	Result(data,data0,
	'''
    put n2=800 n3=1 | window |
    grey title=  label2=Trace label3=Trace label1="Time" unit1=s 
    point1=0.8 point2=0.7 frame1=50 frame2=4 frame3=4
    parallel2=n o2num=0.1 d2num=0.2 n2tic=4 screenratio=0.3
    font=2 labelfat=2 titlefat=2 clip=622.105 %s
    '''%other)   
 
def Grey3fk(data,data0,other):
	Result(data,data0,
	'''
    put d1=0.004|fft1 | fft3 axis=2|fft3 axis=3| cabs|
    put n2=800 n3=1 | window |window max1=70|put o2=1 d2=1|
    grey title=  label2=Trace label2="Wavenumber Trace" label1="Frequency" unit1=Hz
    point1=0.8 point2=0.7 frame1=50 frame2=4 frame3=4
    parallel2=n screenratio=0.3 o2num=0 d2num=20 n2tic=4
    font=2 labelfat=2 titlefat=2 clip=30000 color=j allpos=y %s
    '''%other) 
    
#################
# 3D test using the 5D code (as the second field data example, according to reviewers' comments)
#################

Flow('sean3','sean.HH',
     'dd form=native | bandpass fhi=50 | window f1=80 n1=100 n2=40 n3=20 | put o1=0 d2=1 d3=1 o2=0 o3=0 d1=0.008')

# Mask for random traces
Flow('mcut3','sean3',
     '''
     window n1=1 |
     noise rep=y type=n seed=2008 |
     math output="input^1" |
     mask min=-0.0 
     ''')#| cut n1=5
# Zero out random traces
#Flow('zero3','sean3 mcut3','headercut mask=${SOURCES[1]}')

Flow('zero3','sean3','zerotrace beg=1 j=2 l=1 | transp plane=23 | zerotrace beg=1 j=2 l=1 | transp plane=23')

# Create mask
Flow('maskin3','sean3','math output=1.0 | zerotrace beg=1 j=2 l=1 | transp plane=23 | zerotrace beg=1 j=2 l=1 | transp plane=23')

Flow('zero5','zero3','put n4=1 n5=1 d4=1 d5=1 o4=1 o5=1')
Flow('maskin5','maskin3','put n4=1 n5=1 d4=1 d5=1 o4=1 o5=1')

# 5D NPEF 
Flow('apef5 maskout5','zero5 maskin5',
     '''
     npef5 maskin=${SOURCES[1]} maskout=${TARGETS[1]} jump=2
     a=4,2,2,1,1 niter=50 rect1=50 rect2=10 rect3=10 rect4=1 rect5=1 verb=y
     ''')
     
Flow('recon','zero5 apef5 maskin5',
     '''
     npef5_recon filt=${SOURCES[1]} mask=${SOURCES[2]} niter=50 verb=y 
     ''')
Flow('recon-diff','sean3 recon','add scale=1,-1 ${SOURCES[1]}')

########################################################################
# INITIALIZATION
########################################################################
matlab         = WhereIs('matlab')
matROOT = '../matfun'
matfun = 'Real2'
matlabpath = os.environ.get('MATLABPATH',os.path.join(RSFROOT,'lib'))

lf=0
hf=80
N=20
dt=0.004
n1=100
n2=40
n3=20
Niter=10
mode=0
############################################################
## with parameter
############################################################
N=2
Flow('recon2-0',[os.path.join(matROOT,matfun+'.m'),'zero3','maskin3'],
     '''MATLABPATH=%(matlabpath)s %(matlab)s 
     -nosplash -nojvm -r "addpath %(matROOT)s;%(matfun)s('${SOURCES[1]}','${SOURCES[2]}','${TARGETS[0]}',%(n1)d,%(n2)d,%(n3)d,%(dt)g,%(lf)g,%(hf)g,%(N)d,%(Niter)d,%(mode)d);quit"
     '''%vars(),stdin=0,stdout=-1)

Flow('recon2','recon2-0','put n1=100 n2=40 n3=20 d1=0.008 d2=1 d3=1 o1=0 o2=0 o3=0')

Grey('sean3','')
Grey('zero3','')
Greym('maskin3','color=j')
Greym('maskout3','color=j')
Grey('recon','')
Grey('recon2','')
Grey('recon-diff','')

Grey3('zero2d','zero3','')
Grey3('recon2d','recon','')
Grey3('recon2d2','recon2','')
Grey3fk('zerofk2d','zero3','')
Grey3fk('reconfk2d','recon','')
Grey3fk('reconfk2d2','recon2','')





End()
