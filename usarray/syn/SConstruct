from rsf.proj import*
from rsf.prog import RSFROOT
from math import pi
# data directory

# Data size: 301*61*61

def Grey30(data,other):
	Result(data,
       '''
       byte clip=0.4 |
       grey3 flat=n frame1=55 frame2=75 frame3=75 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s unit2=km unit3=km title=
       screenratio=1.6 color=g %s'''%other)
       
def Grey3(data,other):
	Result(data,
       '''
       byte clip=0.1 |
       grey3 flat=n frame1=55 frame2=75 frame3=75 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s unit2=km unit3=km title=
       screenratio=0.9 color=e %s'''%other)

def Grey3m(data,other):
	Result(data,
       '''
       byte bar=bar.rsf |
       grey3 flat=n frame1=55 frame2=75 frame3=75 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s unit2=km unit3=km title=
       screenratio=0.9 color=e %s'''%other)

def Grey3v(data,other1,other2):
	Result(data,
       '''
       byte bar=bar.rsf %s |
       grey3 flat=n frame1=55 frame2=75 frame3=75 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s unit2=km unit3=km title=
       screenratio=0.9 color=e %s'''%(other1,other2))
              
def Grey3e(data,other,clip):
	Result(data,
       '''
       byte clip=%g |
       grey3 flat=n frame1=55 frame2=75 frame3=75 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s unit2=km unit3=km title=
       screenratio=0.9 color=g %s'''%(clip,other))

def Grey3s(data,other,clip):
	Result(data,
       '''
       byte clip=%g  gainpanel=all  bar=bar.rsf|
       grey3 flat=n frame1=55 frame2=75 frame3=75 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s unit2=km unit3=km title=
       screenratio=0.9 color=j scalebar=y maxval=1 minval=0 %s'''%(clip,other))
       
def Grey(data,other):
	Result(data,
       '''
       grey label2=Trace label1="Time" unit1=s clip=0.9 title=
       screenratio=1.3 color=g %s'''%other)

def Wig(data,other):
	Result(data,
       '''
       wiggle poly=y transp=y yreverse=y label2=Trace label1="Time" unit1=s clip=0.4 title=
       screenratio=1.3 color=g %s'''%other)

def Graph(data,other):
	Result(data,'graph label1="Time" label2="Amplitude" unit2= unit1="s" labelsz=10 labelfat=4 font=2 titlesz=10 titlefat=4 title="" wherexlabel=b wheretitle=t screenratio=0.5 %s' %other)

## Load data
########################################################################
# INITIALIZATION
########################################################################
matlab         = WhereIs('matlab')
matROOT = '../matfun'
matfun = 'Syn'
matlabpath = os.environ.get('MATLABPATH',os.path.join(RSFROOT,'lib'))

if not matlab:
   sys.stderr.write('\nCannot find Matlab.\n')
   sys.exit(1)

############################################################
## generate and process synthetic data
############################################################
Flow('d-0 dn-0 d0-0 dm-0 d1-0 d2-0',[os.path.join(matROOT,matfun+'.m')],
    '''MATLABPATH=%(matlabpath)s %(matlab)s 
    -nosplash -nojvm -r "addpath %(matROOT)s;%(matfun)s('${TARGETS[0]}','${TARGETS[1]}','${TARGETS[2]}','${TARGETS[3]}','${TARGETS[4]}','${TARGETS[5]}');quit"
    '''%vars(),stdin=0,stdout=-1)

## Load data
Flow('syn-us-mask','dm-0','put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')
Flow('syn-us-clean','d-0','put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')
Flow('syn-us-noisy','dn-0','put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')
Flow('syn-us-obs','d0-0','put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')
Flow('syn-us-rr','d2-0','put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')
Flow('syn-us-lrr','d1-0','put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')

# Flow('syn-us-mask','../matfun/syn_us_dm_200_100_100.bin','bin2rsf bfile=${SOURCES[0]} n1=200 n2=10000 | put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')
# Flow('syn-us-clean','../matfun/syn_us_d_200_100_100.bin','bin2rsf bfile=${SOURCES[0]} n1=200 n2=10000 | put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')
# Flow('syn-us-noisy','../matfun/syn_us_dn_200_100_100.bin','bin2rsf bfile=${SOURCES[0]} n1=200 n2=10000 | put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')
# Flow('syn-us-obs','../matfun/syn_us_d0_200_100_100.bin','bin2rsf bfile=${SOURCES[0]} n1=200 n2=10000 | put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')
# Flow('syn-us-rr','../matfun/syn_us_d2_200_100_100.bin','bin2rsf bfile=${SOURCES[0]} n1=200 n2=10000 | put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')
# Flow('syn-us-lrr','../matfun/syn_us_d1_200_100_100.bin','bin2rsf bfile=${SOURCES[0]} n1=200 n2=10000 | put n2=100 n3=100 d1=0.5 d2=3 d3=3 o1=0 o2=0 o3=0')

#X-Y-Z -> Z-X-Y
Flow('syn-us-vp','../matfun/syn_us_vp_100_100_100.bin','bin2rsf bfile=${SOURCES[0]} n1=100 n2=10000 | put n2=100 n3=100 |transp plane=23 |transp plane=12  | put d1=1 d2=3 d3=3 o1=0 o2=0 o3=0')
Flow('syn-us-vs','../matfun/syn_us_vs_100_100_100.bin','bin2rsf bfile=${SOURCES[0]} n1=100 n2=10000 | put n2=100 n3=100 |transp plane=23 |transp plane=12  | put d1=1 d2=3 d3=3 o1=0 o2=0 o3=0')
Flow('syn-us-rho','../matfun/syn_us_rho_100_100_100.bin','bin2rsf bfile=${SOURCES[0]} n1=100 n2=10000 | put n2=100 n3=100 |transp plane=23 |transp plane=12  | put d1=1 d2=3 d3=3 o1=0 o2=0 o3=0')

Grey3v('syn-us-vp','allpos=y bias=4.2 clip=5.0','title=Vp title= color=j scalebar=y label1=Depth unit1=km minval=6.0 maxval=8.0 wantbarlabel=y barlabel="P-wave Velocity" barunit="km/s"')
Grey3v('syn-us-vs','allpos=y bias=2.2 clip=5.0','title=Vs title= color=j allpos=y scalebar=y label1=Depth unit1=km minval=3.5 maxval=4.5 wantbarlabel=y barlabel="S-wave Velocity" barunit="km/s"')
Grey3v('syn-us-rho','allpos=y bias=2.1','title=Rho title= color=j allpos=y scalebar=y label1=Depth unit1=km wantbarlabel=y barlabel=Density barunit="kg/m\^3"')


Grey3m('syn-us-mask','title=Mask color=j allpos=y scalebar=y')
Grey3('syn-us-clean','title=Clean')
Grey3('syn-us-noisy','title=Noisy')
Grey3('syn-us-obs','title=Observed')
Grey3('syn-us-rr','title=Global')
Grey3('syn-us-lrr','title=Local')

Flow('s-c','syn-us-clean','window n2=1 n3=1 f2=75 f3=75')
Flow('s-n','syn-us-noisy','window n2=1 n3=1 f2=75 f3=75')
Flow('s-obs','syn-us-obs','window n2=1 n3=1 f2=75 f3=75')
Flow('s-rr','syn-us-rr','window n2=1 n3=1 f2=75 f3=75')
Flow('s-lrr','syn-us-lrr','window n2=1 n3=1 f2=75 f3=75')

Flow('syn-us-ss','s-c s-lrr s-n s-obs s-rr','cat axis=2 ${SOURCES[1:5]}')
Graph('syn-us-ss','plotfat=10 plotcol="7,3,5,4,6" max2=0.2 min2=-0.18 min1=0 max1=100')

Flow('syn-us-ss-z','syn-us-ss','window min1=20 max1=40 ')
Graph('syn-us-ss-z','plotfat=10 plotcol="7,3,5,4,6"')

x=20
y=-0.18
w=20
w1=0.38

Flow('frame.asc',None,'echo %s n1=10 data_format=ascii_float in=$TARGET'% \
	string.join(map(str,(x,y,x+w,y,x+w,y+w1,x,y+w1,x,y))))
Plot('frame','frame.asc',
	'''
	dd type=complex form=native |
	graph max2=0.2 min2=-0.18 min1=0 max1=100 pad=n plotfat=15 plotcol=2 screenratio=0.5 wantaxis=n wanttitle=n yreverse=n 
	''')
	
Result('syn-us-ss-0','Fig/syn-us-ss.vpl frame','Overlay')

Flow('syn-us-rr-e','syn-us-clean syn-us-rr','add scale=1,-1 ${SOURCES[1]}')
Flow('syn-us-lrr-e','syn-us-clean syn-us-lrr','add scale=1,-1 ${SOURCES[1]}')
Grey3e('syn-us-rr-e','title=Global',0.2)
Grey3e('syn-us-lrr-e','title=Local',0.5)


Flow('syn-us-noisy-simi','syn-us-clean syn-us-noisy','similarity other=${SOURCES[1]} rect1=3 rect2=1 rect3=1')
Flow('syn-us-obs-simi','syn-us-clean syn-us-obs','similarity other=${SOURCES[1]} rect1=3 rect2=1 rect3=1')
Flow('syn-us-rr-simi','syn-us-clean syn-us-rr','similarity other=${SOURCES[1]} rect1=3 rect2=1 rect3=1')
Flow('syn-us-lrr-simi','syn-us-clean syn-us-lrr','similarity other=${SOURCES[1]} rect1=3 rect2=1 rect3=1')

Grey3s('syn-us-noisy-simi','title=Noisy wantbarlabel=y barlabel="Local similarity" barunit=""',1.0)
Grey3s('syn-us-obs-simi','title=Observed wantbarlabel=y barlabel="Local similarity" barunit="" ',1.0)
Grey3s('syn-us-rr-simi','title=Global wantbarlabel=y barlabel="Local similarity" barunit=""',1.0)
Grey3s('syn-us-lrr-simi','title=Local wantbarlabel=y barlabel="Local similarity" barunit=""',1.0) 




"""
def Graph(data,other):
	Result(data,'graph label1="Noise variances" label2="SNR (dB)" unit2= unit1="s" labelsz=10 labelfat=4 font=2 titlesz=10 titlefat=4 title="" wherexlabel=b wheretitle=t plotfat=10 %s' %other)
"""	
def Graphplot(data,other):
	Plot(data,'graph label1="Sampling ratio in percent" label2="Signal-to-Noise Ratio" unit2=dB labelsz=10 labelfat=4 font=2 titlesz=10 titlefat=4 title="" wherexlabel=b wheretitle=t plotfat=10 %s' %other)


matfun = 'Syn_ratios'
############################################################
## generate and process synthetic data
############################################################
Flow('dsnrs-0',[os.path.join(matROOT,matfun+'.m')],
    '''MATLABPATH=%(matlabpath)s %(matlab)s 
    -nosplash -nojvm -r "addpath %(matROOT)s;%(matfun)s('${TARGETS[0]}');quit"
    '''%vars(),stdin=0,stdout=-1)
    
    
Flow('snr0','dsnrs-0','put n1=9 n2=3 d1=1 d2=1 o1=1 o2=1 | window n2=1')
Flow('snr1','dsnrs-0','put n1=9 n2=3 d1=1 d2=1 o1=1 o2=1 | window n2=1 f2=1')
Flow('snr2','dsnrs-0','put n1=9 n2=3 d1=1 d2=1 o1=1 o2=1 | window n2=1 f2=2')

Flow('ratio','snr0','put d1=0.1 o1=0.1 n1=9 |math output="x1*100"')

Flow('snr0s','ratio snr0','cmplx ${SOURCE} ${SOURCES[1]}')
Flow('snr1s','ratio snr1','cmplx ${SOURCE} ${SOURCES[1]}')
Flow('snr2s','ratio snr2','cmplx ${SOURCE} ${SOURCES[1]}')

Flow('snr0st','snr0s','cp')
Flow('snr1st','snr1s','cp')
Flow('snr2st','snr2s','cp')

Graphplot('snr0s','min2=0 max2=25.3 symbol="*" symbolsz=10 plotcol=2 ')
Graphplot('snr1s','min2=0 max2=25.3 symbol="o" symbolsz=10 plotcol=3 wantaxis=n')
Graphplot('snr2s','min2=0 max2=25.3 symbol="v" symbolsz=10 plotcol=5 wantaxis=n')
Graphplot('snr0st','min2=0 max2=25.3   plotcol=2 wantaxis=n')
Graphplot('snr1st','min2=0 max2=25.3   plotcol=3 wantaxis=n')
Graphplot('snr2st','min2=0 max2=25.3   plotcol=5 wantaxis=n')

Plot('label1',None,
	'''
	box x0=7.7 y0=2.5 label="Input" xt=-0.5 yt=0.5 length=1 
	''')
Plot('label2',None,
	'''
	box x0=8.2 y0=6.8 label="Global" xt=-0.5 yt=-0.5 length=1 
	''')

Plot('label0',None,
	'''
	box x0=8 y0=7.85 label="Local" xt=0.5 yt=0.5 length=1 
	''')	
Result('snr-n','snr0s snr1s snr2s snr0st snr1st snr2st label1 label2 label0','Overlay')



End()
