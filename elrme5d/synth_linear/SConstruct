from rsf.proj import*
from rsf.prog import RSFROOT
from math import pi
# Data size: 301*61*61
 
def Grey3(data,other):
	Result(data,
       '''
       byte clip=0.2 |
       grey3 flat=n frame1=50 frame2=5 frame3=5 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s unit2=trace unit3=trace title=
       screenratio=1.4 color=b font=104 %s'''%other)

def Grey3e(data,other,clip):
	Result(data,
       '''
       byte clip=%g |
       grey3 flat=n frame1=50 frame2=5 frame3=5 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s title=
       screenratio=1.4 color=b font=104 %s'''%(clip,other))

def Grey3s(data,other,clip):
	Result(data,
       '''
       byte clip=%g  gainpanel=all  bar=bar.rsf|
       grey3 flat=n frame1=50 frame2=5 frame3=5 
       point1=0.8 point2=0.8 label2=X label3=Y label1="Time" unit1=s title=
       screenratio=1.4 color=j scalebar=y maxval=1 minval=0 %s'''%(clip,other))
       
def Grey(data,other):
	Result(data,
       '''
       grey label2=Trace label1="Time" unit1=s clip=0.9 title=
       screenratio=1.4 color=b %s'''%other)

#def Wig(data,other):
#	Result(data,
#       '''
#       wiggle poly=y transp=y yreverse=y label2=Trace label1="Time" unit1=s clip=0.4 title=
#       screenratio=1.4 color=g %s'''%other)

def Wig(data,other): 
	Result(data,'''
				put d1=0.004 |
				grey color=g color=b transp=y yreverse=y screenratio=1.2
				wanttitle=y flat=n labelfat=4 font=2 titlefat=4				
				label2=Trace unit2="" label1="Time"  unit1=s
				title="" wherexlabel=b wheretitle=t poly=y 
				wheretitle=t wherexlabel=b clip=0.2 labelsz=10 %s'''%other)

def Graph(data,other):
	Result(data,'graph label1="Time" label2="Amplitude" unit2= unit1="s" labelsz=10 labelfat=4 font=2 titlesz=10 titlefat=4 title=" Amplitude comparison" wherexlabel=b wheretitle=t screenratio=0.5 %s' %other)
	
def Greyfk(data,data0,other):
	Result(data,data0,
		'''put d1=0.004 o3=0 d2=1 d3=1| fft1 | fft3 axis=2 pad=1| fft3 axis=3 pad=1| window max1=125| cabs |byte clip=20 allpos=y | grey3 labelfat=4 font=2 titlefat=4 flat=n label2="HX" unit2= label3="HY" unit1=Hz label1=Frequency frame1=20 frame2=15 frame3=20 point1=0.8 point2=0.8 title= screenratio=1.2 unit2=Wavenumber unit3=Wavenumber font=104 color=j %s '''%other)

def Greys(data,other):
	Result(data,
		'''put d1=0.004 o3=0 d2=1 d3=1 | byte clip=1.2 bar=bar.rsf| grey3 labelfat=4 font=2 titlefat=4 label2=HX label3=HY flat=n frame1=50 frame2=5 frame3=6 point1=0.85 point2=0.75 screenratio=1.2 label1=Time unit1=s  unit2=trace unit3=trace color=jet%s'''%(other))

## Load data
########################################################################
# INITIALIZATION
########################################################################
matlab         = WhereIs('matlab')
matROOT = '../matfun'
matfun = 'synth_linear'
matlabpath = os.environ.get('MATLABPATH',os.path.join(RSFROOT,'lib'))

if not matlab:
   sys.stderr.write('\nCannot find Matlab.\n')
   sys.exit(1)

############################################################
## generate and process synthetic data
############################################################
Flow('synth-clean-0 synth-noisy-0 synth-obs-0 synth-drr-0 synth-elrme-0',[os.path.join(matROOT,matfun+'.m')],
    '''MATLABPATH=%(matlabpath)s %(matlab)s 
    -nosplash -nojvm -r "addpath %(matROOT)s;%(matfun)s('${TARGETS[0]}','${TARGETS[1]}','${TARGETS[2]}','${TARGETS[3]}','${TARGETS[4]}');quit"
    '''%vars(),stdin=0,stdout=-1)

Flow('synth-clean','synth-clean-0',' put n2=10 n3=10 n4=10 n5=10 d1=0.004 d2=1 d3=1 d4=1 d5=1 o1=0 o2=1 o3=1 o4=1 o5=1')
Flow('synth-noisy','synth-noisy-0','put n2=10 n3=10 n4=10 n5=10 d1=0.004 d2=1 d3=1 d4=1 d5=1 o1=0 o2=1 o3=1 o4=1 o5=1')
Flow('synth-obs','synth-obs-0','put n2=10 n3=10 n4=10 n5=10 d1=0.004 d2=1 d3=1 d4=1 d5=1 o1=0 o2=1 o3=1 o4=1 o5=1')
Flow('synth-drr','synth-drr-0','put n2=10 n3=10 n4=10 n5=10 d1=0.004 d2=1 d3=1 d4=1 d5=1 o1=0 o2=1 o3=1 o4=1 o5=1')
Flow('synth-elrme','synth-elrme-0','put n2=10 n3=10 n4=10 n5=10 d1=0.004 d2=1 d3=1 d4=1 d5=1 o1=0 o2=1 o3=1 o4=1 o5=1')
Flow('synth-clean-xy','synth-clean','window n2=1 n3=1 f2=5 f3=5')
Flow('synth-noisy-xy','synth-noisy','window n2=1 n3=1 f2=5 f3=5')
Flow('synth-obs-xy','synth-obs','window n2=1 n3=1 f2=5 f3=5')
Flow('synth-drr-xy','synth-drr','window n2=1 n3=1 f2=5 f3=5')
Flow('synth-elrme-xy','synth-elrme','window n2=1 n3=1 f2=5 f3=5')

Grey3('synth-clean-xy','title=Clean')
Grey3('synth-noisy-xy','title=Noisy')
Grey3('synth-obs-xy','title=Observed')
Grey3('synth-drr-xy','title=DRR')
Grey3('synth-elrme-xy','title=Proposed')

Flow('synth-clean-hxhy','synth-clean','window n4=1 n5=1 f4=1 f5=1')
Flow('synth-noisy-hxhy','synth-noisy','window n4=1 n5=1 f4=1 f5=1')
Flow('synth-obs-hxhy','synth-obs','window n4=1 n5=1 f4=1 f5=1')
Flow('synth-drr-hxhy','synth-drr','window n4=1 n5=1 f4=1 f5=1')
Flow('synth-elrme-hxhy','synth-elrme','window n4=1 n5=1 f4=1 f5=1')

Grey3('synth-clean-hxhy','title=Clean frame1=50 frame2=5 frame3=5 label2=HX label3=HY label1="Time" unit1=s unit2=trace unit3=trace')
Grey3('synth-noisy-hxhy','title=Noisy frame1=50 frame2=5 frame3=5 label2=HX label3=HY label1="Time" unit1=s unit2=trace unit3=trace')
Grey3('synth-obs-hxhy','title=Observed frame1=50 frame2=5 frame3=5 label2=HX label3=HY label1="Time" unit1=s unit2=trace unit3=trace')
Grey3('synth-drr-hxhy','title=DRR frame1=50 frame2=5 frame3=5 label2=HX label3=HY label1="Time" unit1=s unit2=trace unit3=trace')
Grey3('synth-elrme-hxhy','title=Proposed frame1=50 frame2=5 frame3=5 label2=HX label3=HY label1="Time" unit1=s unit2=trace unit3=trace')

Flow('synth-drr-xy-e','synth-clean-xy synth-drr-xy','add scale=1,-1 ${SOURCES[1]}')
Flow('synth-elrme-xy-e','synth-clean-xy synth-elrme-xy','add scale=1,-1 ${SOURCES[1]}')
Grey3e('synth-drr-xy-e','title=DRR frame1=50 frame2=5 frame3=5 label1="Time" unit1=s unit2=trace unit3=trace',0.9)
Grey3e('synth-elrme-xy-e','title=Proposed frame1=50 frame2=5 frame3=5 label1="Time" unit1=s unit2=trace unit3=trace',0.9)

Flow('synth-drr-hxhy-e','synth-clean-hxhy synth-drr-hxhy','add scale=1,-1 ${SOURCES[1]}')
Flow('synth-elrme-hxhy-e','synth-clean-hxhy synth-elrme-hxhy','add scale=1,-1 ${SOURCES[1]}')
Grey3e('synth-drr-hxhy-e','title=DRR frame1=50 frame2=5 frame3=5 label2=HX label3=HY label1="Time" unit1=s unit2=trace unit3=trace',0.9)
Grey3e('synth-elrme-hxhy-e','title=Proposed frame1=50 frame2=5 frame3=5 label2=HX label3=HY label1="Time" unit1=s unit2=trace unit3=trace',0.9)

Greyfk('synth-clean-hxhy-fkk','synth-clean-hxhy','title=True')
Greyfk('synth-noisy-hxhy-fkk','synth-noisy-hxhy','title=Noisy')
Greyfk('synth-obs-hxhy-fkk','synth-obs-hxhy','title=Observed')
Greyfk('synth-drr-hxhy-fkk','synth-drr-hxhy','title=DRR')
Greyfk('synth-elrme-hxhy-fkk','synth-elrme-hxhy','title=Proposed')

Flow('synth-n-drr-hxhy','synth-noisy-hxhy synth-drr-hxhy',' add scale=1,-1 ${SOURCES[1]}')
Flow('synth-n-elrme-hxhy','synth-noisy-hxhy synth-elrme-hxhy',' add scale=1,-1 ${SOURCES[1]}')

Grey3('synth-n-drr-hxhy','color=b color=b title=DRR label2=HX label3=HY label1="Time" unit1=s unit2=trace unit3=trace')
Grey3('synth-n-elrme-hxhy','color=b color=b title=Proposed label2=HX label3=HY label1="Time" unit1=s unit2=trace unit3=trace')

Flow('synth-simi1','synth-n-drr-hxhy synth-drr-hxhy','similarity other=${SOURCES[1]} niter=20 rect1=3 rect2=3 rect3=3')
Flow('synth-simi2','synth-n-elrme-hxhy synth-elrme-hxhy','similarity other=${SOURCES[1]} niter=20 rect1=3 rect2=3 rect3=3 ')

Greys('synth-simi1','color=j scalebar=y clip=0.8 minval=0 maxval=0.6 title="DRR" barlabel="Similarity"')
Greys('synth-simi2','color=j scalebar=y clip=0.8 minval=0 maxval=0.6 title="Proposed" barlabel="Similarity"')

End()
